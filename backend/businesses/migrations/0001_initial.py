# Generated by Django 5.2.7 on 2025-10-20 16:21

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Area",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("name_en", models.CharField(blank=True, max_length=100)),
                ("slug", models.SlugField(max_length=100)),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "verbose_name": "Area",
                "verbose_name_plural": "Areas",
                "db_table": "areas",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("name_en", models.CharField(blank=True, max_length=100)),
                ("slug", models.SlugField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "icon",
                    models.ImageField(blank=True, null=True, upload_to="categories/"),
                ),
                ("order", models.IntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Category",
                "verbose_name_plural": "Categories",
                "db_table": "categories",
                "ordering": ["order", "name"],
            },
        ),
        migrations.CreateModel(
            name="City",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("name_en", models.CharField(blank=True, max_length=100)),
                ("slug", models.SlugField(max_length=100)),
                ("province", models.CharField(max_length=100)),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "verbose_name": "City",
                "verbose_name_plural": "Cities",
                "db_table": "cities",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Business",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("slug", models.SlugField(max_length=200, unique=True)),
                ("description", models.TextField()),
                (
                    "gender_target",
                    models.CharField(
                        choices=[
                            ("male", "Male"),
                            ("female", "Female"),
                            ("unisex", "Unisex"),
                        ],
                        default="unisex",
                        max_length=10,
                    ),
                ),
                ("address", models.TextField()),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                ("phone", models.CharField(max_length=11)),
                ("whatsapp", models.CharField(blank=True, max_length=11)),
                ("instagram", models.CharField(blank=True, max_length=100)),
                ("telegram", models.CharField(blank=True, max_length=100)),
                ("website", models.URLField(blank=True)),
                (
                    "logo",
                    models.ImageField(
                        blank=True, null=True, upload_to="businesses/logos/"
                    ),
                ),
                (
                    "cover_image",
                    models.ImageField(
                        blank=True, null=True, upload_to="businesses/covers/"
                    ),
                ),
                ("opens_at", models.TimeField(default="09:00")),
                ("closes_at", models.TimeField(default="21:00")),
                ("closed_days", models.JSONField(blank=True, default=list)),
                ("booking_advance_days", models.IntegerField(default=30)),
                ("cancellation_deadline_hours", models.IntegerField(default=24)),
                ("slot_duration_minutes", models.IntegerField(default=30)),
                ("allow_online_booking", models.BooleanField(default=True)),
                ("auto_confirm_booking", models.BooleanField(default=False)),
                ("total_bookings", models.IntegerField(default=0)),
                ("total_reviews", models.IntegerField(default=0)),
                (
                    "average_rating",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=3,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending Approval"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("suspended", "Suspended"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("is_featured", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("approved_at", models.DateTimeField(blank=True, null=True)),
                (
                    "area",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="businesses.area",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="businesses",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="businesses",
                        to="businesses.category",
                    ),
                ),
                (
                    "city",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="businesses.city",
                    ),
                ),
            ],
            options={
                "verbose_name": "Business",
                "verbose_name_plural": "Businesses",
                "db_table": "businesses",
                "ordering": ["-is_featured", "-average_rating", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="BusinessImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.ImageField(upload_to="businesses/gallery/")),
                ("caption", models.CharField(blank=True, max_length=200)),
                ("order", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "business",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="businesses.business",
                    ),
                ),
            ],
            options={
                "db_table": "business_images",
                "ordering": ["order", "-created_at"],
            },
        ),
        migrations.AddField(
            model_name="area",
            name="city",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="areas",
                to="businesses.city",
            ),
        ),
        migrations.CreateModel(
            name="Staff",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "gender",
                    models.CharField(
                        choices=[("male", "Male"), ("female", "Female")], max_length=10
                    ),
                ),
                ("phone", models.CharField(blank=True, max_length=11)),
                (
                    "avatar",
                    models.ImageField(blank=True, null=True, upload_to="staff/"),
                ),
                ("bio", models.TextField(blank=True)),
                ("title", models.CharField(blank=True, max_length=100)),
                ("experience_years", models.IntegerField(default=0)),
                ("specialties", models.JSONField(blank=True, default=list)),
                ("is_active", models.BooleanField(default=True)),
                ("can_accept_bookings", models.BooleanField(default=True)),
                ("order", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "business",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="staff_members",
                        to="businesses.business",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="staff_profiles",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Staff",
                "verbose_name_plural": "Staff",
                "db_table": "staff",
                "ordering": ["order", "name"],
            },
        ),
        migrations.CreateModel(
            name="StaffLeave",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                ("reason", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "staff",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="leaves",
                        to="businesses.staff",
                    ),
                ),
            ],
            options={
                "db_table": "staff_leaves",
                "ordering": ["-start_date"],
            },
        ),
        migrations.CreateModel(
            name="StaffSchedule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "weekday",
                    models.IntegerField(
                        choices=[
                            (0, "Saturday"),
                            (1, "Sunday"),
                            (2, "Monday"),
                            (3, "Tuesday"),
                            (4, "Wednesday"),
                            (5, "Thursday"),
                            (6, "Friday"),
                        ]
                    ),
                ),
                ("start_time", models.TimeField()),
                ("end_time", models.TimeField()),
                ("is_available", models.BooleanField(default=True)),
                (
                    "staff",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="schedules",
                        to="businesses.staff",
                    ),
                ),
            ],
            options={
                "db_table": "staff_schedules",
                "ordering": ["weekday", "start_time"],
            },
        ),
        migrations.AddIndex(
            model_name="business",
            index=models.Index(fields=["slug"], name="businesses_slug_279d6a_idx"),
        ),
        migrations.AddIndex(
            model_name="business",
            index=models.Index(
                fields=["city", "area"], name="businesses_city_id_308700_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="business",
            index=models.Index(
                fields=["category"], name="businesses_categor_59d3ac_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="business",
            index=models.Index(
                fields=["-average_rating"], name="businesses_average_be613f_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="staffschedule",
            unique_together={("staff", "weekday")},
        ),
    ]
